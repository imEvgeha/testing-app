{"ast":null,"code":"var _jsxFileName = \"/Users/user/Documents/MyDocuments/Projects/testing-app/pages/posts/[id].tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from \"react\";\nimport { useRouter } from 'next/router';\nimport { setMessage } from '../../redux/actions/main';\nimport { connect } from \"react-redux\";\nimport { Layout } from \"../../components/Layout\";\nimport styled from 'styled-components';\n\nfunction Posts(props) {\n  const {\n    0: body,\n    1: setBody\n  } = useState('');\n  const {\n    getMessage,\n    setMessage\n  } = props;\n  const id = useRouter().query.id;\n\n  const axios = require('axios');\n\n  const router = useRouter();\n  const Button = styled.button`\n      background: transparent;\n      border-radius: 3px;\n      border: 2px solid grey;\n      color: grey;\n      margin: 0.5em 1em;\n      padding: 0.25em 1em;\n    `;\n  console.log(getMessage);\n  useEffect(() => {\n    axios.get(`https://simple-blog-api.crew.red/posts/${id}?_embed=comments`).then(function (response) {\n      setMessage(response.data);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }, []);\n\n  const handleDeleteClick = () => {\n    axios.delete(`https://simple-blog-api.crew.red/posts/${id}?_embed=comments`).then(function (response) {\n      setMessage(response.data);\n      router.push({\n        pathname: '/'\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  const handleChange = event => {\n    event.preventDefault();\n    setBody(event.target.value);\n  };\n\n  const handleCommentSubmit = event => {\n    event.preventDefault();\n    axios.post('https://simple-blog-api.crew.red/comments', {\n      \"postId\": id,\n      \"body\": 'asd'\n    }).then(function () {\n      alert('Successfully created!');\n    }).catch(function (error) {\n      console.log(error);\n      alert('Error! Check console.log');\n    });\n  };\n\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"postInfo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, `Message №${getMessage.id}`), __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, getMessage.title), __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, getMessage.body), __jsx(Button, {\n    onClick: handleDeleteClick,\n    className: \"delete-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, \"Delete this message\"), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, getMessage.comments && getMessage.comments.map(elem => {\n    return __jsx(\"div\", {\n      key: elem.id,\n      className: 'post-comment',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    }, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 19\n      }\n    }, `User №${elem.id}`), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 19\n      }\n    }), __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 19\n      }\n    }, elem.body));\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, __jsx(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, __jsx(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 15\n    }\n  }, \"Body\"), __jsx(\"input\", {\n    className: 'styled-input',\n    onChange: handleChange,\n    name: 'body',\n    value: body,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 15\n    }\n  }), __jsx(Button, {\n    onClick: handleCommentSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 15\n    }\n  }, \"Create\")))));\n}\n\nconst mapStateToProps = state => ({\n  getMessage: state.main.openedMessage\n});\n\nconst mapDispathToProps = {\n  setMessage: setMessage\n};\nexport default connect(mapStateToProps, mapDispathToProps)(Posts);","map":{"version":3,"sources":["/Users/user/Documents/MyDocuments/Projects/testing-app/pages/posts/[id].tsx"],"names":["useState","useEffect","useRouter","setMessage","connect","Layout","styled","Posts","props","body","setBody","getMessage","id","query","axios","require","router","Button","button","console","log","get","then","response","data","catch","error","handleDeleteClick","delete","push","pathname","handleChange","event","preventDefault","target","value","handleCommentSubmit","post","alert","title","comments","map","elem","mapStateToProps","state","main","openedMessage","mapDispathToProps"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useRouter } from 'next/router';\nimport { setMessage } from '../../redux/actions/main';\nimport { connect } from \"react-redux\";\nimport { Layout } from \"../../components/Layout\";\nimport { TMessageData } from \"..\";\nimport styled, { css } from 'styled-components'\n\nexport type TMessageProps = {\n  getMessage: TMessageData[],\n  setMessage: (data) => void\n}\n\n  function Posts(props: TMessageProps) {\n    const [body, setBody] = useState<string>('');\n    const { getMessage, setMessage } = props;\n    const id = useRouter().query.id\n    const axios = require('axios');\n    const router = useRouter()\n\n    const Button = styled.button`\n      background: transparent;\n      border-radius: 3px;\n      border: 2px solid grey;\n      color: grey;\n      margin: 0.5em 1em;\n      padding: 0.25em 1em;\n    `;\n\n    console.log(getMessage)\n\n    useEffect(() => {\n      axios.get(`https://simple-blog-api.crew.red/posts/${id}?_embed=comments`)\n        .then(function (response: any) {\n          setMessage(response.data)\n        })\n        .catch(function (error: any) {\n          console.log(error);\n        })\n    }, []);\n\n    const handleDeleteClick = () => {\n      axios.delete(`https://simple-blog-api.crew.red/posts/${id}?_embed=comments`)\n        .then(function (response: any) {\n          setMessage(response.data)\n          router.push({\n            pathname: '/',\n          })\n        })\n        .catch(function (error: any) {\n          console.log(error);\n        })\n    }\n\n    const handleChange = (event: any) => {\n      event.preventDefault();\n      setBody(event.target.value);\n    }\n\n    const handleCommentSubmit = (event) => {\n      event.preventDefault();\n\n      axios.post('https://simple-blog-api.crew.red/comments', {\n        \"postId\": id,\n        \"body\": 'asd'\n      })\n      .then(function () {\n        alert('Successfully created!')\n      })\n      .catch(function (error: any) {\n        console.log(error);\n        alert('Error! Check console.log')\n      });\n    }\n\n    return (\n      <Layout>\n        <div className=\"postInfo\">\n          <h1>{`Message №${getMessage.id}`}</h1>\n          <h2>{getMessage.title}</h2>\n          <h2>{getMessage.body}</h2>\n          <Button onClick={handleDeleteClick} className=\"delete-button\">Delete this message</Button>\n          <div>\n            {getMessage.comments && getMessage.comments.map((elem) => {\n              return (\n                <div key={elem.id} className={'post-comment'}>\n                  <span>{`User №${elem.id}`}</span>\n                  <br></br>\n                  <span>{elem.body}</span>\n                </div>\n              )\n            })}\n          </div>\n          <div>\n            <form>\n              <b>Body</b>\n              <input \n                className={'styled-input'}\n                onChange={handleChange}\n                name={'body'} \n                value={body} \n              />\n\n              <Button onClick={handleCommentSubmit}>Create</Button>\n            </form>\n          </div>\n        </div>\n      </Layout>\n    )\n  }\n\nconst mapStateToProps = state => ({\n  getMessage: state.main.openedMessage\n})\n\nconst mapDispathToProps = {\n  setMessage: setMessage\n}\n\nexport default connect(mapStateToProps, mapDispathToProps)(Posts)"]},"metadata":{},"sourceType":"module"}
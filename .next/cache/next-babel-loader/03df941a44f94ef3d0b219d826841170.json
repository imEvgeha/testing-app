{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as types from '../types';\n\nvar main = function main() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    data: [],\n    openedMessage: {}\n  };\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case types.SET_POSTS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        data: action.payload\n      });\n\n    case types.OPENED_MESSAGE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        openedMessage: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default main;","map":{"version":3,"sources":["/Users/user/Documents/MyDocuments/Projects/testing-app/redux/reducers/main.js"],"names":["types","main","state","data","openedMessage","action","type","SET_POSTS","payload","OPENED_MESSAGE"],"mappings":";;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,UAAvB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAGC;AAAA,MAHAC,KAGA,uEAHQ;AACpBC,IAAAA,IAAI,EAAE,EADc;AAEpBC,IAAAA,aAAa,EAAE;AAFK,GAGR;AAAA,MAAXC,MAAW;;AACZ,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,KAAK,CAACO,SAAX;AACE,6CAAYL,KAAZ;AAAmBC,QAAAA,IAAI,EAAEE,MAAM,CAACG;AAAhC;;AAEF,SAAKR,KAAK,CAACS,cAAX;AACE,6CAAYP,KAAZ;AAAmBE,QAAAA,aAAa,EAAEC,MAAM,CAACG;AAAzC;;AAEF;AACE,aAAON,KAAP;AARJ;AAUD,CAdD;;AAgBA,eAAeD,IAAf","sourcesContent":["import * as types from '../types'\n\nconst main = (state = {\n  data: [],\n  openedMessage: {}\n}, action) => {\n  switch (action.type) {\n    case types.SET_POSTS:\n      return { ...state, data: action.payload }\n\n    case types.OPENED_MESSAGE:\n      return { ...state, openedMessage: action.payload }\n\n    default:\n      return state\n  }\n}\n\nexport default main\n"]},"metadata":{},"sourceType":"module"}
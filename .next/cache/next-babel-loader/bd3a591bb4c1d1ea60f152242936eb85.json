{"ast":null,"code":"var _jsxFileName = \"/Users/user/Documents/MyDocuments/Projects/testing-app/pages/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from \"react\";\nexport default function Home() {\n  _s();\n\n  var _useState = useState(false),\n      bla = _useState[0],\n      setBla = _useState[1];\n\n  var stringBla = bla.toString();\n  console.log(stringBla);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }, stringBla), __jsx(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }), __jsx(\"button\", {\n    onClick: function onClick() {\n      return setBla(!bla);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }, \"Change\"));\n}\n\n_s(Home, \"md8M7t+XLWZKZwBEwDmQdm905OQ=\");\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/user/Documents/MyDocuments/Projects/testing-app/pages/index.tsx"],"names":["useState","Home","bla","setBla","stringBla","toString","console","log"],"mappings":";;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAAA,kBACPD,QAAQ,CAAU,KAAV,CADD;AAAA,MACtBE,GADsB;AAAA,MACjBC,MADiB;;AAE7B,MAAMC,SAAS,GAAGF,GAAG,CAACG,QAAJ,EAAlB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,SAAL,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE;AAAQ,IAAA,OAAO,EAAE;AAAA,aAAKD,MAAM,CAAC,CAACD,GAAF,CAAX;AAAA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,CADF;AASD;;GAduBD,I;;KAAAA,I","sourcesContent":["import { useState } from \"react\";\n\nexport default function Home() {\n  const [bla, setBla] = useState<boolean>(false);\n  const stringBla = bla.toString()\n  console.log(stringBla)\n\n  return (\n    <div>\n      <h2>{stringBla}</h2>\n      <hr></hr>\n      <button onClick={() =>setBla(!bla)}>\n        Change\n      </button>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}